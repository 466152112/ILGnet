name: "resnet_inception"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_file: ""
  }
  data_param {
    source: "train_lmdb"
    batch_size: 32
    backend: LMDB
    shuffle: true
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 224
    mean_file: ""
  }
  data_param {
    source: "val_lmdb"
    batch_size: 32
    backend: LMDB
  }
}
#########################conv1
layer {
  name: "conv1/7x7_s3"
  type: "Convolution"
  bottom: "data"
  top: "conv1/7x7_s3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 7
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv1/relu_7x7"
  type: "PReLU"
  bottom: "conv1/7x7_s3"
  top: "conv1/7x7_s3"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s3"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
#############################conv2_x

################inception 2a
layer {
  name: "inception_2a/3x3_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "inception_2a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2a/relu_3x3_reduce"
  type: "PReLU"
  bottom: "inception_2a/3x3_reduce"
  top: "inception_2a/3x3_reduce"
}

layer {
  name: "inception_2a/3x3"
  type: "Convolution"
  bottom: "inception_2a/3x3_reduce"
  top: "inception_2a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2a/relu_3x3"
  type: "PReLU"
  bottom: "inception_2a/3x3"
  top: "inception_2a/3x3"
}
layer {
  name: "inception_2a/5x5_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "inception_2a/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2a/relu_5x5_reduce"
  type: "PReLU"
  bottom: "inception_2a/5x5_reduce"
  top: "inception_2a/5x5_reduce"
}
layer {
  name: "inception_2a/5x5"
  type: "Convolution"
  bottom: "inception_2a/5x5_reduce"
  top: "inception_2a/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2a/relu_5x5"
  type: "PReLU"
  bottom: "inception_2a/5x5"
  top: "inception_2a/5x5"
}
layer {
  name: "inception_2a/1x1"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "inception_2a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2a/relu_1x1"
  type: "PReLU"
  bottom: "inception_2a/1x1"
  top: "inception_2a/1x1"
}
layer {
  name: "inception_2a/output"
  type: "Concat"
  bottom: "inception_2a/3x3"
  bottom: "inception_2a/5x5"
  bottom: "inception_2a/1x1"
  top: "inception_2a/output"
}
layer {
  name: "inception_2a/output_proj"
  type: "Convolution"
  bottom: "inception_2a/output"
  top: "inception_2a/output_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
#############conv2_1 shotcut

layer {
  name: "conv2_1/1x1_s1_1_sc"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2_1/1x1_s1_1_sc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
##################conv2_1  eltwise_sum

layer {
  name: "conv2_1"
  type: "Eltwise"
  bottom: "conv2_1/1x1_s1_1_sc"
  bottom: "inception_2a/output_proj" 
  top: "conv2_1"
  eltwise_param {
  operation: SUM
  }
}

layer {
  name: "conv2_1_bn"
  type: "BN"
  bottom: "conv2_1"
  top: "conv2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
   param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
	  type: "constant"
	  value: 1
	}
	bias_filler {
	  type: "constant"
	  value: 0.001
	}
	moving_average: true
  }
}
layer {
  name: "conv2_1/relu"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}

###############################conv2_2
################inception 2b
layer {
  name: "inception_2b/3x3_reduce"
  type: "Convolution"
  bottom: "conv2_1"
  top: "inception_2b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2b/relu_3x3_reduce"
  type: "PReLU"
  bottom: "inception_2b/3x3_reduce"
  top: "inception_2b/3x3_reduce"
}

layer {
  name: "inception_2b/3x3"
  type: "Convolution"
  bottom: "inception_2b/3x3_reduce"
  top: "inception_2b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2b/relu_3x3"
  type: "PReLU"
  bottom: "inception_2b/3x3"
  top: "inception_2b/3x3"
}
layer {
  name: "inception_2b/5x5_reduce"
  type: "Convolution"
  bottom: "conv2_1"
  top: "inception_2b/5x5_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 16
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2b/relu_5x5_reduce"
  type: "PReLU"
  bottom: "inception_2b/5x5_reduce"
  top: "inception_2b/5x5_reduce"
}
layer {
  name: "inception_2b/5x5"
  type: "Convolution"
  bottom: "inception_2b/5x5_reduce"
  top: "inception_2b/5x5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    pad: 2
    kernel_size: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2b/relu_5x5"
  type: "PReLU"
  bottom: "inception_2b/5x5"
  top: "inception_2b/5x5"
}
layer {
  name: "inception_2b/1x1"
  type: "Convolution"
  bottom: "conv2_1"
  top: "inception_2b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_2b/relu_1x1"
  type: "PReLU"
  bottom: "inception_2b/1x1"
  top: "inception_2b/1x1"
}
layer {
  name: "inception_2b/output"
  type: "Concat"
  bottom: "inception_2b/3x3"
  bottom: "inception_2b/5x5"
  bottom: "inception_2b/1x1"
  top: "inception_2b/output"
}
layer {
  name: "inception_2b/output_proj"
  type: "Convolution"
  bottom: "inception_2b/output"
  top: "inception_2b/output_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

##################conv2_2  eltwise_sum

layer {
  name: "conv2_2"
  type: "Eltwise"
  bottom: "conv2_1"
  bottom: "inception_2b/output_proj"
  top: "conv2_2"
  eltwise_param {
  operation: SUM
  }
}

layer {
  name: "conv2_2_bn"
  type: "BN"
  bottom: "conv2_2"
  top: "conv2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
   param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
	  type: "constant"
	  value: 1
	}
	bias_filler {
	  type: "constant"
	  value: 0.001
	}
	moving_average: true
  }
}
layer {
  name: "conv2_2/relu"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}

##############pooling2   

layer {
  name: "conv_pooling2/3x3"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv_pooling2/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 3
    stride: 2
    pad:1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv_pooling2/relu_3x3"
  type: "PReLU"
  bottom: "conv_pooling2/3x3"
  top: "conv_pooling2/3x3"
}

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "pooling2/output"
  type: "Concat"
  bottom: "conv_pooling2/3x3"
  bottom: "pool2"
  top: "pooling2/output"
}

###########################conv3_x
################inception 3a
layer {
  name: "inception_3a/1x1"
  type: "Convolution"
  bottom: "pooling2/output"
  top: "inception_3a/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3a/relu_1x1"
  type: "PReLU"
  bottom: "inception_3a/1x1"
  top: "inception_3a/1x1"
}
layer {
  name: "inception_3a/3x3_reduce"
  type: "Convolution"
  bottom: "pooling2/output"
  top: "inception_3a/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3a/relu_3x3_reduce"
  type: "PReLU"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3_reduce"
}

layer {
  name: "inception_3a/3x3"
  type: "Convolution"
  bottom: "inception_3a/3x3_reduce"
  top: "inception_3a/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3a/relu_3x3"
  type: "PReLU"
  bottom: "inception_3a/3x3"
  top: "inception_3a/3x3"
}
layer {
  name: "inception_3a/output"
  type: "Concat"
  bottom: "inception_3a/1x1"
  bottom: "inception_3a/3x3"
  top: "inception_3a/output"
}
layer {
  name: "inception_3a/output_proj"
  type: "Convolution"
  bottom: "inception_3a/output"
  top: "inception_3a/output_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
##################conv3_1  eltwise_sum

layer {
  name: "conv3_1"
  type: "Eltwise"
  bottom: "pooling2/output"
  bottom: "inception_3a/output_proj"
  top: "conv3_1"
  eltwise_param {
  operation: SUM
  }
}

layer {
  name: "conv3_1_bn"
  type: "BN"
  bottom: "conv3_1"
  top: "conv3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
   param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
	  type: "constant"
	  value: 1
	}
	bias_filler {
	  type: "constant"
	  value: 0.001
	}
	moving_average: true
  }
}
layer {
  name: "conv3_1/relu"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}



#######################conv3_2
################inception 3b
layer {
  name: "inception_3b/1x1"
  type: "Convolution"
  bottom: "conv3_1"
  top: "inception_3b/1x1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3b/relu_1x1"
  type: "PReLU"
  bottom: "inception_3b/1x1"
  top: "inception_3b/1x1"
}
layer {
  name: "inception_3b/3x3_reduce"
  type: "Convolution"
  bottom: "conv3_1"
  top: "inception_3b/3x3_reduce"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3b/relu_3x3_reduce"
  type: "PReLU"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3_reduce"
}

layer {
  name: "inception_3b/3x3"
  type: "Convolution"
  bottom: "inception_3b/3x3_reduce"
  top: "inception_3b/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "inception_3b/relu_3x3"
  type: "PReLU"
  bottom: "inception_3b/3x3"
  top: "inception_3b/3x3"
}
layer {
  name: "inception_3b/output"
  type: "Concat"
  bottom: "inception_3b/1x1"
  bottom: "inception_3b/3x3"
  top: "inception_3b/output"
}
layer {
  name: "inception_3b/output_proj"
  type: "Convolution"
  bottom: "inception_3b/output"
  top: "inception_3b/output_proj"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
##################conv3_2  eltwise_sum

layer {
  name: "conv3_2"
  type: "Eltwise"
  bottom: "conv3_1"
  bottom: "inception_3b/output_proj"
  top: "conv3_2"
  eltwise_param {
  operation: SUM
  }
}

layer {
  name: "conv3_2_bn"
  type: "BN"
  bottom: "conv3_2"
  top: "conv3_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
   param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
	  type: "constant"
	  value: 1
	}
	bias_filler {
	  type: "constant"
	  value: 0.001
	}
	moving_average: true
  }
}
layer {
  name: "conv3_2/relu"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}

##############pooling3   

layer {
  name: "conv_pooling3/3x3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv_pooling3/3x3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    kernel_size: 3
    stride: 2
    pad:1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv_pooling3/relu_3x3"
  type: "PReLU"
  bottom: "conv_pooling3/3x3"
  top: "conv_pooling3/3x3"
}

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_2"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "pooling3/output"
  type: "Concat"
  bottom: "conv_pooling3/3x3"
  bottom: "pool3"
  top: "pooling3/output"
}



################conv4_1
layer {
  name: "conv4_1/1x1_s1_1"
  type: "Convolution"
  bottom: "pooling3/output"
  top: "conv4_1/1x1_s1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv4_1/relu_1x1_s1_1"
  type: "PReLU"
  bottom: "conv4_1/1x1_s1_1"
  top: "conv4_1/1x1_s1_1"
}
###############conv4_1_2
layer {
  name: "conv4_1/3x3_s2_2"
  type: "Convolution"
  bottom: "conv4_1/1x1_s1_1"
  top: "conv4_1/3x3_s2_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv4_1/relu_3x3_s2_2"
  type: "PReLU"
  bottom: "conv4_1/3x3_s2_2"
  top: "conv4_1/3x3_s2_2"
}

##################conv4_1_3
layer {
  name: "conv4_1/1x1_s1_3"
  type: "Convolution"
  bottom: "conv4_1/3x3_s2_2"
  top: "conv4_1/1x1_s1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#############conv4_1 shotcut

layer {
  name: "conv4_1/1x1_s1_1_sc"
  type: "Convolution"
  bottom: "pooling3/output"
  top: "conv4_1/1x1_s1_1_sc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
##################conv4_1  eltwise_sum

layer {
  name: "conv4_1"
  type: "Eltwise"
  bottom: "conv4_1/1x1_s1_1_sc"
  bottom: "conv4_1/1x1_s1_3"
  top: "conv4_1"
  eltwise_param {
  operation: SUM
  }
}
layer {
  name: "conv4_1/relu"
  type: "PReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
################conv4_2
layer {
  name: "conv4_2/1x1_s1_1"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2/1x1_s1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 224
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "conv4_2/relu_1x1_s1_1"
  type: "PReLU"
  bottom: "conv4_2/1x1_s1_1"
  top: "conv4_2/1x1_s1_1"
}
###############conv4_2_2
layer {
  name: "conv4_2/3x3_s1_2"
  type: "Convolution"
  bottom: "conv4_2/1x1_s1_1"
  top: "conv4_2/3x3_s1_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv4_2/relu_3x3_s1_2"
  type: "PReLU"
  bottom: "conv4_2/3x3_s1_2"
  top: "conv4_2/3x3_s1_2"
}
##############conv4_2_3
layer {
  name: "conv4_2/1x1_s1_3"
  type: "Convolution"
  bottom: "conv4_2/3x3_s1_2"
  top: "conv4_2/1x1_s1_3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
##################conv4_2  eltwise_sum

layer {
  name: "conv4_2"
  type: "Eltwise"
   bottom: "conv4_1"
  bottom: "conv4_2/1x1_s1_3"
  top: "conv4_2"
  eltwise_param {
  operation: SUM
  }
}
layer {
  name: "conv4_2_bn"
  type: "BN"
  bottom: "conv4_2"
  top: "conv4_2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
   param {
    lr_mult: 0
    decay_mult: 0
  }
  bn_param {
    slope_filler {
	  type: "constant"
	  value: 1
	}
	bias_filler {
	  type: "constant"
	  value: 0.001
	}
	moving_average: true
  }
}
layer {
  name: "conv4_2/relu"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}

#################avg_pooling

layer {
  name: "pool4/6x6_s1"
  type: "Pooling"
  bottom: "conv4_2"
  top: "pool4/6x6_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}
#####################
layer{
  name: "drop1"
  type: "Dropout"
  bottom: "pool4/6x6_s1"
  top: "pool4/6x6_s1"
  dropout_param{
	   dropout_ratio: 0.4
  }
}
####################loss
layer {
  name: "loss/classifier_wule"
  type: "InnerProduct"
  bottom: "pool4/6x6_s1"
  top: "loss/classifier"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "loss/classifier"
  bottom: "label"
  top: "loss"
}

layer {
  name: "loss/top-1"
  type: "Accuracy"
  bottom: "loss/classifier"
  bottom: "label"
  top: "loss/top-1"
  include {
    phase: TEST
  }
}
